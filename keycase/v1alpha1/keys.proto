syntax = "proto3";

import "google/protobuf/timestamp.proto";

// A key that can be decrypted by the identified PKCS#11 resource.
message Pkcs11EncryptedKey {
  bytes ciphertext = 2;
  string pkcs11_uri = 3;
  bytes public_key = 4;
}

// A literal piece of encrypted data and the list of keys that may decrypt it.
message Payload {
  // KeyName is the canonical name of the key for which this payload was encrypted.
  string key_name = 1;

  // Ciphertext is the literal ciphertext of the secret.
  bytes ciphertext = 2;
}

// A password-derived key salted with some measured property of the host
// machine.
message MachineKey {
  message Command {
    // The binary to be executed.
    string command = 1;

    // Arguments to be passed to the binary.
    repeated string argv = 2;
  }

  oneof kind {
    // The  largest available hash for the specified Platform Control Register
    // shall be used as the key derivation salt.
    int32 tpm_pcr = 1;

    // The SHA256 sum of the file at the specified path shall be used as the
    // key derivation salt.
    string file_path = 2;

    // The SHA256 sum of the given command's standard output stream shall be
    // used as the key derivation salt.
    Command command = 3;
  }
}

message SaltKey {
  bytes salt = 1;
}

message UserKey {
  string name = 1;
  oneof kind {
    // A salt for password-based key derivation embedded in the vault file.
    SaltKey embedded_salt = 2;

    // A salt for password-based key derivation derived from the host machine.
    MachineKey machine_salt = 3;

    // A key that is encrypted for an RSA private key identified by a PKCS#11 URI.
    Pkcs11EncryptedKey pkcs11_key = 4;
  }

  google.protobuf.Timestamp create_time = 5;
}

message MasterKey {
  string name = 1;
  repeated Payload keys = 2;
}

// Secret represents a TOTP Secret.
message Secret {
  // Name is the unique canonical identifier of this Secret.
  string name = 1;

  // DisplayName is the human-readable name of this Secret.
  string display_name = 2;

  // Description is a human-readable long-form description of this Secret.
  string description = 3;

  repeated Payload payloads = 4;
}

message Vault {
  repeated UserKey user_keys = 2;
  repeated MasterKey master_keys = 3;
  repeated Secret secrets = 4;
}
